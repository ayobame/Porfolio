knitr::opts_chunk$set(echo = TRUE)
# data source https://vincentarelbundock.github.io/Rdatasets/datasets.html
# This code reads the 'USSeatBelts.csv' file into R as a dataframe named 'dataset'
dataset = read.csv("USSeatBelts.csv")
# Removes all rows with NA (missing) values.
dataset = na.omit(dataset)
#unction displays the first 5 rows of the dataset for a preliminary view.
head(dataset)
# Function provides a detailed summary of the dataset, including data types, missing values, and basic statistics
skimr::skim(dataset)
# creates a new dataframe 'num' with numeric columns from 'dataset
num=data.frame(dataset$year, dataset$miles, dataset$fatalities, dataset$seatbelt, dataset$income, dataset$age)
# calculates the correlation matrix of 'num' and stores it in 'ncor'
ncor=cor(num)
#  visualizes this correlation matrix.
library(corrplot)
corrplot(ncor)
ncor
# prepares data for the GLM analysis by selecting relevant variables and creating a new dataframe 'df'
x1 = dataset$seatbelt
x2 = as.factor(dataset$speed70)
x3 = dataset$alcohol
y =  dataset$fatalities
df = data.frame(x1, x2, x3, y)
# Fits a GLM to the data in 'df' with 'y' as the response variable and other columns as predictors.
dataglm = glm(y~.,df,family = "gaussian")
#displays the results of the GLM.
summary(dataglm)
# prepares data for the GLM analysis by selecting relevant variables and creating a new dataframe 'df'
x1 = dataset$seatbelt
x2 = as.factor(dataset$speed70)
x3 = dataset$alcohol
y =  dataset$fatalities
df = data.frame(x1, x2, x3, y)
# Fits a GLM to the data in 'df' with 'y' as the response variable and other columns as predictors.
dataglm = glm(y~.,df,family = "gaussian")
#displays the results of the GLM.
summary(dataglm)
# Sets a seed for reproducibility.
# Splits the data into training (80%) and testing (20%) sets.
set.seed(123)
n=nrow(df)
indexes = sample(n,n*(80/100))
trainset = df[indexes,]
testset = df[-indexes,]
dim(testset)
dim(trainset)
#Fits a GLM on the training set and displays the summary of the model.
dataglm = glm(y~.,trainset,family = "gaussian")
summary(dataglm)
# prepares data for the GLM analysis by selecting relevant variables and creating a new dataframe 'df'
x1 = dataset$seatbelt
x2 = as.factor(dataset$speed70)
x3 = dataset$alcohol
y =  dataset$fatalities
df = data.frame(x1, x2, x3, y)
# Fits a GLM to the data in 'df' with 'y' as the response variable and other columns as predictors.
dataglm = glm(y~.,df,family = "gaussian")
#displays the results of the GLM.
summary(dataglm)
# Fits a GLM to the data in 'df' with 'y' as the response variable and other columns as predictors.
dataglm = glm(y~.,x2,family = "gaussian")
#displays the results of the GLM.
summary(dataglm)
# Sets a seed for reproducibility.
# Splits the data into training (80%) and testing (20%) sets.
set.seed(123)
n=nrow(x2)
indexes = sample(n,n*(80/100))
# Sets a seed for reproducibility.
# Splits the data into training (80%) and testing (20%) sets.
set.seed(123)
n=nrow(x2)
indexes = sample(n,n*(80/100))
# Sets a seed for reproducibility.
# Splits the data into training (80%) and testing (20%) sets.
set.seed(123)
n=nrow(df)
indexes = sample(n,n*(80/100))
trainset = df[indexes,]
testset = df[-indexes,]
dim(testset)
dim(trainset)
# Fits a GLM to the data in 'df' with 'y' as the response variable and other columns as predictors.
dataglm = glm(y~.,x2,family = "gaussian")
#displays the results of the GLM.
summary(dataglm)
